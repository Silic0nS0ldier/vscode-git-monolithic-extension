module(name = "vscode_git_monolithic")

# To fully update lockfile: bazel mod deps --lockfile_mode=refresh

bazel_dep(name = "aspect_rules_js", version = "2.4.0")
bazel_dep(name = "aspect_bazel_lib", version = "2.19.4")
bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "rules_nodejs", version = "6.4.0")
bazel_dep(name = "aspect_rules_ts", version = "3.6.3")
bazel_dep(name = "aspect_rules_lint", version = "1.5.1")
bazel_dep(name = "rules_multitool", version = "1.6.0")
bazel_dep(name = "rules_shell", version = "0.5.0")
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "rules_rust", version = "0.61.0")
bazel_dep(name = "rules_rust_wasm_bindgen", version = "0.61.0")

single_version_override(
    module_name = "rules_nodejs",
    patches = ["//:patches/rules_nodejs@6.4.0.patch"],
    patch_strip = 1,
)

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(
    node_version = "24.4.1",
    node_repositories = {
        "24.4.1-darwin_arm64": ("node-v24.4.1-darwin-arm64.tar.xz", "node-v24.4.1-darwin-arm64", "7ea25548b120ebaeaffadd37878b83c3d917cbb1eb3e9dbab7cb861bd8763a56"),
        "24.4.1-darwin_amd64": ("node-v24.4.1-darwin-x64.tar.xz", "node-v24.4.1-darwin-x64", "e391194c578cf91e2af35acb30dc6c23fe8893fb3409a2c9a4e25b51f87a6cb0"),
        "24.4.1-linux_arm64": ("node-v24.4.1-linux-arm64.tar.xz", "node-v24.4.1-linux-arm64", "555659c36fc72d0617e278b5d26ffcaebc3760a3de354926b1e5f1b0bfd66083"),
        "24.4.1-linux_ppc64le": ("node-v24.4.1-linux-ppc64le.tar.xz", "node-v24.4.1-linux-ppc64le", "2d549d5c63d282012192bf8594ea105b9876e9198d3af8401c61efe15c3d8cb1"),
        "24.4.1-linux_s390x": ("node-v24.4.1-linux-s390x.tar.xz", "node-v24.4.1-linux-s390x", "70316824c88fa396b12363fb9695b8f9a88f671377056bd86761dc96962240f8"),
        "24.4.1-linux_amd64": ("node-v24.4.1-linux-x64.tar.xz", "node-v24.4.1-linux-x64", "7e067b13cd0dc7ee8b239f4ebe1ae54f3bba3a6e904553fcb5f581530eb8306d"),
        "24.4.1-windows_amd64": ("node-v24.4.1-win-x64.zip", "node-v24.4.1-win-x64", "0428a6ca7544df310de4ed12c10e84c0bc7c9022945dc16de22f7c0dc4893dd2"),
    },
)

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm")
npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
)
use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
use_repo(pnpm, "pnpm")

rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext")
rules_ts_ext.deps(
    ts_version_from = "@npm//:typescript/resolved.json",
)
use_repo(rules_ts_ext, "npm_typescript")

multitool = use_extension("@rules_multitool//multitool:extension.bzl", "multitool")
multitool.hub(lockfile = "//:multitool.lock.json")
use_repo(multitool, "multitool")

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2024",
    versions = [ "1.88.0" ],
)

crate = use_extension("@rules_rust//crate_universe:extensions.bzl", "crate")
crate.from_cargo(
    name = "crates",
    cargo_lockfile = "//:Cargo.lock",
    manifests = [
        "//:Cargo.toml",
        "//packages/wasm:Cargo.toml",
    ],
)
use_repo(crate, "crates")

register_toolchains(
    # Required for building with //build_defs/platforms:vscode_ext target platform
    "//build_defs/rust_wasm_bindgen:toolchain_for_vscode_ext",
)
