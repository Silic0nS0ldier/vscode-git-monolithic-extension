load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@npm//packages/git:ava/package_json.bzl", "bin")

npm_link_all_packages(name = "node_modules")

npm_package(
    name = "pkg",
    srcs = [":lib", "package.json"],
    include_types = True,
    exclude_srcs_patterns = ["tsconfig.json"],
    visibility = ["//visibility:public"],
)

ts_project(
    name = "lib",
    srcs = glob(["src/**/*.ts"], exclude = ["src/**/*.test.ts", "src/**/*.stub.ts"]) + ["package.json"],
    out_dir = "dist",
    root_dir = "src",
    deps = [
        ":node_modules/@types/node",
        ":node_modules/@types/which",
        ":node_modules/compare-versions",
        ":node_modules/get-stream",
        ":node_modules/which",
    ],
    tsconfig = ":tsconfig",
    declaration = True,
)

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    deps = ["//:tsconfig"],
    visibility = [":__pkg__"]
)

ts_project(
    name = "lib_tests",
    srcs = glob(["src/**/*.test.ts", "src/**/*.stub.ts"]) + ["package.json"],
    out_dir = "dist",
    root_dir = "src",
    deps = [
        ":node_modules/ava",
        ":node_modules/into-stream",
        ":lib",
    ],
    tsconfig = ":tsconfig",
    declaration = True,
)

bin.ava_test(
    name = "tests",
    data = [
        ":lib_tests",
        "package.json",
    ],
    chdir = package_name(),
)
